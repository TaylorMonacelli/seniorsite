Parameters:
  keyName:
    Type: String
    Description: Your key name
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Resources:
  vpcmpvpc6CD04676:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: vpc-mp
    Metadata:
      aws:cdk:path: NetworkStack/vpc-mp/vpc
  subnetswebAsubnet701EB870:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpcmpvpc6CD04676
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: webA-subnet
    Metadata:
      aws:cdk:path: NetworkStack/subnets/webA-subnet
  subnetswebBsubnetC4D81D8C:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpcmpvpc6CD04676
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: webB-subnet
    Metadata:
      aws:cdk:path: NetworkStack/subnets/webB-subnet
  subnetsdbsubnetACDC0DAEA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpcmpvpc6CD04676
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: db-subnetA
    Metadata:
      aws:cdk:path: NetworkStack/subnets/db-subnetA
  subnetsdbsubnetBBA7B2493:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpcmpvpc6CD04676
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: db-subnetB
    Metadata:
      aws:cdk:path: NetworkStack/subnets/db-subnetB
  SGswebsg4384784B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: web-sg
      GroupName: web-sg
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow HTTP access from the internet
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: Allow HTTPS access from the internet
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          Description: Allow SSH access from the internet
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      Tags:
        - Key: Name
          Value: web-sg
      VpcId:
        Ref: vpcmpvpc6CD04676
    Metadata:
      aws:cdk:path: NetworkStack/SGs/web-sg
  IGWigwmp8994DC2D:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: igw-mp
    Metadata:
      aws:cdk:path: NetworkStack/IGW/igw-mp
  IGWvpcgwmp3E9B5D1C:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: vpcmpvpc6CD04676
      InternetGatewayId:
        Ref: IGWigwmp8994DC2D
    Metadata:
      aws:cdk:path: NetworkStack/IGW/vpcgw-mp
  rtableswebrtable3A00AAC2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcmpvpc6CD04676
      Tags:
        - Key: Name
          Value: web-rtable
    Metadata:
      aws:cdk:path: NetworkStack/rtables/web-rtable
  rtableswebroute3B8EA4C2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Fn::GetAtt:
          - rtableswebrtable3A00AAC2
          - RouteTableId
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: IGWigwmp8994DC2D
    Metadata:
      aws:cdk:path: NetworkStack/rtables/web-route
  rtableswebAsrtaC6C5FF7B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Fn::GetAtt:
          - rtableswebrtable3A00AAC2
          - RouteTableId
      SubnetId:
        Fn::GetAtt:
          - subnetswebAsubnet701EB870
          - SubnetId
    Metadata:
      aws:cdk:path: NetworkStack/rtables/webA-srta
  rtableswebBsrta2EBB585F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Fn::GetAtt:
          - rtableswebrtable3A00AAC2
          - RouteTableId
      SubnetId:
        Fn::GetAtt:
          - subnetswebBsubnetC4D81D8C
          - SubnetId
    Metadata:
      aws:cdk:path: NetworkStack/rtables/webB-srta
  mprdsbucketphp1DD58A6E:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: assets-rds-endpoint-pm-323912
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: NetworkStack/mp-rds/bucket-php/Resource
  mprdsbucketphpPolicyF824DA43:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: mprdsbucketphp1DD58A6E
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - mprdsbucketphp1DD58A6E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - mprdsbucketphp1DD58A6E
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: NetworkStack/mp-rds/bucket-php/Policy/Resource
  mprdsbucketphpAutoDeleteObjectsCustomResourceB26B3ACC:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: mprdsbucketphp1DD58A6E
    DependsOn:
      - mprdsbucketphpPolicyF824DA43
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: NetworkStack/mp-rds/bucket-php/AutoDeleteObjectsCustomResource/Default
  mprdswriterole79A2F84C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      RoleName: writeS3Role
    Metadata:
      aws:cdk:path: NetworkStack/mp-rds/write-role/Resource
  mprdswriteroleDefaultPolicy199F712E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutObject
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - mprdsbucketphp1DD58A6E
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: mprdswriteroleDefaultPolicy199F712E
      Roles:
        - Ref: mprdswriterole79A2F84C
    Metadata:
      aws:cdk:path: NetworkStack/mp-rds/write-role/DefaultPolicy/Resource
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: NetworkStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: mprdsbucketphp1DD58A6E
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: NetworkStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be
      aws:asset:property: Code
  ALBwebRoleB7373615:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      Description: Role for CDI instances
    DependsOn:
      - mprdsbucketphpAutoDeleteObjectsCustomResourceB26B3ACC
      - mprdsbucketphpPolicyF824DA43
      - mprdsbucketphp1DD58A6E
    Metadata:
      aws:cdk:path: NetworkStack/ALB/webRole/Resource
  ALBwebRoleDefaultPolicyEE0D8997:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - mprdsbucketphp1DD58A6E
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: ALBwebRoleDefaultPolicyEE0D8997
      Roles:
        - Ref: ALBwebRoleB7373615
    DependsOn:
      - mprdsbucketphpAutoDeleteObjectsCustomResourceB26B3ACC
      - mprdsbucketphpPolicyF824DA43
      - mprdsbucketphp1DD58A6E
    Metadata:
      aws:cdk:path: NetworkStack/ALB/webRole/DefaultPolicy/Resource
  ALBwebInstanceProfile6646235C:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: ALBwebRoleB7373615
      InstanceProfileName: webInstanceProfile
    DependsOn:
      - mprdsbucketphpAutoDeleteObjectsCustomResourceB26B3ACC
      - mprdsbucketphpPolicyF824DA43
      - mprdsbucketphp1DD58A6E
    Metadata:
      aws:cdk:path: NetworkStack/ALB/webInstanceProfile
  ALBlaunchtemplate818E5AA6:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        IamInstanceProfile:
          Arn:
            Fn::GetAtt:
              - ALBwebInstanceProfile6646235C
              - Arn
        ImageId: ami-0cff7528ff583bf9a
        InstanceType: t2.micro
        KeyName: streambox-us-east-1
        NetworkInterfaces:
          - AssociatePublicIpAddress: true
            DeviceIndex: 0
            Groups:
              - Fn::GetAtt:
                  - SGswebsg4384784B
                  - GroupId
            SubnetId:
              Fn::GetAtt:
                - subnetswebAsubnet701EB870
                - SubnetId
        UserData:
          Fn::Base64: |-
            #!/usr/bin/env bash
            curl -O https://streambox-cdi.s3-us-west-2.amazonaws.com/latest/linux/InstallSbxCDI.tgz
            tar xzf InstallSbxCDI.tgz
            cd InstallSbxCDI
            ./installweb
            ./installefa
            ./installsbx
            ./sanity_check
      LaunchTemplateName: launch-template
    DependsOn:
      - mprdsbucketphpAutoDeleteObjectsCustomResourceB26B3ACC
      - mprdsbucketphpPolicyF824DA43
      - mprdsbucketphp1DD58A6E
    Metadata:
      aws:cdk:path: NetworkStack/ALB/launch-template
  ALBInstance12737BAF9:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-east-1a
      LaunchTemplate:
        LaunchTemplateId:
          Ref: ALBlaunchtemplate818E5AA6
        Version:
          Fn::GetAtt:
            - ALBlaunchtemplate818E5AA6
            - LatestVersionNumber
    DependsOn:
      - mprdsbucketphpAutoDeleteObjectsCustomResourceB26B3ACC
      - mprdsbucketphpPolicyF824DA43
      - mprdsbucketphp1DD58A6E
    Metadata:
      aws:cdk:path: NetworkStack/ALB/Instance1
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VQy27CMBD8Fu6OW9Kq6pXmgJB6iALqtdo4CyyJ18gPUBTl3+tgIOppZ2d29pXL/F0uF3B1mWrarKNaDlsPqhXFnkuwoNGjFVH/HVDlcoj0T1lM6jbUjP6GUAVLvl9bE84TseFoiuIaPF6hF8l0z1Y+9j9q5Ju3MsHjDuoOn9ncfBZXzhlF4MnwJH9DYHXcoT53kAwbdh5Y4Sjcmxy+gmrTbneUQmk6Uv1Mp3wUBFoOlXnsEONcOaPHiNKaPXU4jqIIzhtdoTPBqmR+4n9StFyoiY+Md6CPDz4QH6b6wnBD01WjYNOgPLmXy/JTfsjXxckRZTawJ42ySvEPbYaUiq8BAAA=
    Metadata:
      aws:cdk:path: NetworkStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

